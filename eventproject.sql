DROP TABLE IF EXISTS Attendees;
DROP TABLE IF EXISTS Venues;
DROP TABLE IF EXISTS Events;
DROP TABLE IF EXISTS Speakers;
DROP TABLE IF EXISTS BookedEvents;

CREATE TABLE Speakers (
ID INT UNSIGNED AUTO_INCREMENT,
Name VARCHAR(50) UNIQUE,
Bio VARCHAR(1000),
ContactInfo VARCHAR(100),
PRIMARY KEY(ID)
);

CREATE TABLE Events (
ID INT UNSIGNED AUTO_INCREMENT,
Title VARCHAR(100) UNIQUE,
DateTime DATETIME UNIQUE,
Description VARCHAR(1000),
EventSpeaker VARCHAR(50),
PRIMARY KEY(ID),
FOREIGN KEY (EventSpeaker) REFERENCES Speakers(Name)
ON UPDATE CASCADE
ON DELETE SET NULL
);

CREATE TABLE Venues (
ID INT UNSIGNED AUTO_INCREMENT,
Name VARCHAR(100),
Location VARCHAR(50) UNIQUE,
Capacity INT UNSIGNED,
ContactInfo VARCHAR(100),
PRIMARY KEY(ID)
);

CREATE TABLE Attendees (
ID INT UNSIGNED AUTO_INCREMENT,
Name VARCHAR(50) UNIQUE,
Email VARCHAR(100),
RegistrationDate DATE,
EventAttended VARCHAR(100),
Organization VARCHAR(100),
PRIMARY KEY(ID),
FOREIGN KEY (EventAttended) REFERENCES Events(Title)
ON UPDATE CASCADE
ON DELETE SET NULL
);

CREATE TABLE BookedEvents (
ID INT UNSIGNED AUTO_INCREMENT,
EventID INT,
SpeakerID INT,
VenueID INT,
PRIMARY KEY(ID),
FOREIGN KEY (EventID) REFERENCES Events(ID)
ON UPDATE CASCADE
ON DELETE CASCADE,
FOREIGN KEY (SpeakerID) REFERENCES Speakers(ID)
ON UPDATE CASCADE
ON DELETE CASCADE,
FOREIGN KEY (VenueID) REFERENCES Venues(ID)
ON UPDATE CASCADE
ON DELETE CASCADE
);

/*
CREATE TABLE BookedAttendees (
EventID INT UNSIGNED,
AttendeeID INT UNSIGNED,
AttendeeName VARCHAR(50),
FOREIGN KEY (EventID) REFERENCES Events(ID)
ON UPDATE RESTRICT
ON DELETE CASCADE,
FOREIGN KEY (AttendeeID) REFERENCES Attendees(ID)
ON UPDATE RESTRICT
ON DELETE CASCADE,
FOREIGN KEY (AttendeeName) REFERENCES Attendees(Name)
ON UPDATE CASCADE
ON DELETE SET NULL
);
*/